/*  * Copyright 2016 Matthew J. Dovey (www.ceridwen.com). * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.ceridwen.badgeserver;import java.awt.Font;import java.awt.font.FontRenderContext;import java.awt.geom.AffineTransform;import java.io.IOException;import java.util.Properties;import java.util.logging.Level;import java.util.logging.Logger;import javax.servlet.ServletRequest;import org.apache.commons.lang3.StringUtils;/** * * @author Matthew */public class BadgeData {  private int captionWidth;  private int messageWidth;  private String captionColour = "#555";  private String messageColour = "#4c1";  private String caption;  private String message;  private String link;  private String template = "badge";  private ServletRequest request;  private BadgeData() {  }    public BadgeData(ServletRequest request) {    this.request = request;    this.setCaption("");    this.setMessage("");  }      /**   * Get the value of template   *   * @return the value of template   */  public String getTemplate() {    return template;  }  /**   * Set the value of template   *   * @param template new value of template   */  public void setTemplate(String template) {    this.template = template;  }  /**   * Get the value of link   *   * @return the value of link   */  public String getLink() {    return link;  }  /**   * Set the value of link   *   * @param link new value of link   */  public void setLink(String link) {    this.link = link;  }    /**   * Get the value of message   *   * @return the value of message   */  public String getMessage() {    return message;  }  /**   * Set the value of message   *   * @param message new value of message   */  public void setMessage(String message) {    if (StringUtils.isBlank(message)) {      this.message = "[Blank]";    } else {      this.message = message;    }    this.messageWidth = this.calculateTextWidth(this.message) + 10;  }  /**   * Get the value of caption   *   * @return the value of caption   */  public String getCaption() {    return caption;   }  /**   * Set the value of caption   *   * @param caption new value of caption   */  public void setCaption(String caption) {    if (StringUtils.isBlank(caption)) {      this.caption = "[Blank]";    } else {      this.caption = caption;    }    this.captionWidth = this.calculateTextWidth(this.caption) + 10;  }    /**   * Get the value of messageColour   *   * @return the value of messageColour   */  public String getMessageColour() {    return messageColour;  }  /**   * Set the value of messageColour   *   * @param colour new value of messageColour   */  public void setMessageColour(String colour) {    if (StringUtils.isNotBlank(colour)) {      this.messageColour = this.resolveColour(colour);    }  }    /**   * Get the value of captionColour   *   * @return the value of captionColour   */  public String getCaptionColour() {    return captionColour;  }  /**   * Set the value of captionColour   *   * @param colour new value of captionColour   */  public void setCaptionColour(String colour) {    if (StringUtils.isNotBlank(colour)) {      this.captionColour = this.resolveColour(colour);    }  }  /**   * Get the value of titleWidth   *   * @return the value of titleWidth   */  public int getCaptionWidth() {    return captionWidth;  }  /**   * Get the value of messageWidth   *   * @return the value of messageWidth   */  public int getMessageWidth() {    return messageWidth;  }    public int getTotalWidth() {    return this.getCaptionWidth() + this.getMessageWidth();  }    public int getCaptionMidPoint() {    return this.getCaptionWidth()/2 + 1;  }    public int getMessageMidPoint() {    return this.getCaptionWidth() + this.getMessageWidth()/2 - 1;  }    private int calculateTextWidth(String text) {    AffineTransform affinetransform = new AffineTransform();         FontRenderContext frc = new FontRenderContext(affinetransform,true,true);         Font font = new Font("Verdana", Font.PLAIN, 11);    return (int)font.getStringBounds(text, frc).getWidth();  }  private String resolveColour(String colour) {    String candidateColour = null;    try {      if (StringUtils.isNotBlank(colour)) {        Properties colours = new Properties();        colours.load(request.getServletContext().getResourceAsStream("/WEB-INF/colours.properties"));        candidateColour = colours.getProperty(colour, colour);      }    } catch (IOException ex) {      Logger.getLogger(BadgeData.class.getName()).log(Level.SEVERE, null, ex);    }    return StringUtils.defaultIfBlank(candidateColour, colour);  }}